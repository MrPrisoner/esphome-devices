esphome:
  name: esp32-prepaid-cam
  friendly_name: ESP32 Prepaid Cam
  on_boot: 
    priority: -100
    then:
      - delay: 5s
      - while:
          condition:
            not:
              api.connected:
          then:
          - logger.log: "Waiting for Home Assistant API"
          - delay: 2s              
      - wait_until:
          condition:
            api.connected:
          timeout: 10s
      - homeassistant.action:
          action: script.take_snapshot_on_esp32_prepaid_cam

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret esp32_prepaidcam_api_encryption_key

ota:
  - platform: esphome
    password: !secret esp32_prepaidcam_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: !secret esp32_prepaidcam_ip

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret esp32_prepaidcam_ap_ssid
    password: !secret esp32_prepaidcam_ap_password

captive_portal:

deep_sleep:
  run_duration: 20s
  sleep_duration: 60min
    
# https://esphome.io/components/esp32_camera.html#configuration-for-ai-thinker-camera
# https://github.com/raphaelbs/esp32-cam-ai-thinker/blob/master/docs/esp32cam-pin-notes.md

esp32_camera:
  name: Camera
  external_clock:
    pin: GPIO0
    frequency: 10MHz
  i2c_pins:
    sda: GPIO26
    scl: GPIO27
  data_pins: [GPIO5, GPIO18, GPIO19, GPIO21, GPIO36, GPIO39, GPIO34, GPIO35]
  vsync_pin: GPIO25
  href_pin: GPIO23
  pixel_clock_pin: GPIO22
  power_down_pin: GPIO32
  resolution: UXGA
  horizontal_mirror: False
  max_framerate: 1 fps
  idle_framerate: 1 fps

light:
  - platform: monochromatic
    id: led_light
    output: led
    name: "LED"
    default_transition_length: 0.5s      

output:
  - platform: ledc
    id: led
    pin: GPIO4
    frequency: "1000Hz"

sensor:

  - platform: uptime
    name: Uptime
    update_interval: 60s

  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""

button:

  - platform: template
    name: "Take Snapshot"
    id: take_snapshot_button
    on_press:
      - homeassistant.action:
          action: script.take_snapshot_on_esp32_prepaid_cam

  - platform: restart
    name: Restart
  - platform: safe_mode
    name: "Restart (Safe Mode)"
  - platform: shutdown
    name: Shutdown

